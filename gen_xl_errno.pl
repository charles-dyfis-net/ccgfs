#!/usr/bin/perl

use strict;

if (scalar(@ARGV) == 0) {
	@ARGV = qw(
		/usr/include/asm-generic/errno-base.h
		/usr/include/asm-generic/errno.h
	);
}

@_ = <>;

print <<"--EOT";
/* Generated by gen_xl_errno.pl */
#include <errno.h>
#include "xl_errno.h"
#define ARRAY_SIZE(x) (sizeof(x) / sizeof(*(x)))

static const int arch_to_generic_table[] = {
	[0] = 0,
--EOT

foreach (@_) {
	if (/^\s*#define\s+(\S+)\s+(\d+)/) {
		print "\t[$1] = -$2,\n";
	}
}

print <<"--EOT";
};

static const int generic_to_arch_table[] = {
	[0] = 0,
--EOT

foreach (@_) {
	if (/^\s*#define\s+(\S+)\s+(\d+)/) {
		print "\t[$2] = -$1,\n";
	}
}

print <<"--EOT";
};

/* x is always negative or zero */
int generic_errno(int x)
{
	if (x < -ARRAY_SIZE(arch_to_generic_table))
		return x;
	else
		return arch_to_generic_table[-x];
}

/* x is always negative or zero */
int arch_errno(int x)
{
	if (x < -ARRAY_SIZE(generic_to_arch_table))
		return x;
	else
		return generic_to_arch_table[-x];
}
--EOT
